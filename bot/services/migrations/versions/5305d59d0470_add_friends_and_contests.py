"""add friends and contests

Revision ID: 5305d59d0470
Revises: 65c2e5a8b444
Create Date: 2025-05-28 02:07:44.389952

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5305d59d0470'
down_revision: Union[str, None] = '65c2e5a8b444'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contests',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_date_time', sa.DateTime(), nullable=False),
    sa.Column('end_date_time', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('friendship_invites')
    op.add_column('friends', sa.Column('user_id', sa.BigInteger(), nullable=False))
    op.add_column('friends', sa.Column('friend_id', sa.BigInteger(), nullable=False))
    op.add_column('friends', sa.Column('contest_id', sa.Integer(), nullable=True))
    op.drop_constraint('friends_second_chat_id_fkey', 'friends', type_='foreignkey')
    op.drop_constraint('friends_first_chat_id_fkey', 'friends', type_='foreignkey')
    op.create_foreign_key(None, 'friends', 'users', ['user_id'], ['chat_id'])
    op.create_foreign_key(None, 'friends', 'users', ['friend_id'], ['chat_id'])
    op.create_foreign_key(None, 'friends', 'contests', ['contest_id'], ['id'])
    op.drop_column('friends', 'second_chat_id')
    op.drop_column('friends', 'id')
    op.drop_column('friends', 'first_chat_id')
    op.add_column('users', sa.Column('unique_code', sa.String(length=32), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'unique_code')
    op.add_column('friends', sa.Column('first_chat_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.add_column('friends', sa.Column('id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('friends', sa.Column('second_chat_id', sa.BIGINT(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'friends', type_='foreignkey')
    op.drop_constraint(None, 'friends', type_='foreignkey')
    op.drop_constraint(None, 'friends', type_='foreignkey')
    op.create_foreign_key('friends_first_chat_id_fkey', 'friends', 'users', ['first_chat_id'], ['chat_id'])
    op.create_foreign_key('friends_second_chat_id_fkey', 'friends', 'users', ['second_chat_id'], ['chat_id'])
    op.drop_column('friends', 'contest_id')
    op.drop_column('friends', 'friend_id')
    op.drop_column('friends', 'user_id')
    op.create_table('friendship_invites',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sender_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('receiver_id', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('invite_status', postgresql.ENUM('Pending', 'Approved', 'Rejected', name='invitestatusenum'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.chat_id'], name='friendship_invites_receiver_id_fkey'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.chat_id'], name='friendship_invites_sender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='friendship_invites_pkey')
    )
    op.drop_table('contests')
    # ### end Alembic commands ###
